Description: >

    This template deploys a VPC, with a pair of public and private subnets spread
    across two Availabilty Zones. It deploys an Internet Gateway, with a default
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
    and default routes for them in the private subnets.

    It then deploys a highly available ECS cluster using an AutoScaling Group, with
    ECS hosts distributed across multiple Availability Zones.

    It then deploys a Highly available RDS Multi Availability Zone database services service using ()

    Finally, it deploys a pair of example ECS services from containers published in
    Amazon EC2 Container Registry (Amazon ECR).

    Based on AWSLabs ECS Reference Arhitecture
    https://github.com/awslabs/ecs-refarch-cloudformation

    Last Modified: 17th February 2017
    Author Dan Carr (ddcarr@gmail.com)

Parameters:

    KeyPairName:
        Description: Key Pair for access to bastion and ecs host instances
        Type: String

Resources:

    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/infrastructure/vpc.yaml
            Parameters:
                EnvironmentName:    !Ref AWS::StackName
                VpcCIDR:            10.180.0.0/16
                PublicSubnet1CIDR:  10.180.8.0/21
                PublicSubnet2CIDR:  10.180.16.0/21
                PrivateSubnet1CIDR: 10.180.24.0/21
                PrivateSubnet2CIDR: 10.180.32.0/21

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/infrastructure/security-groups.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/infrastructure/load-balancers.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

    ECS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/infrastructure/ecs-cluster.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                KeyPairName: !Ref KeyPairName
                InstanceType: t2.micro
                ClusterSize: 2
                VPC: !GetAtt VPC.Outputs.VPC
                SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
                Subnets: !GetAtt VPC.Outputs.PrivateSubnets

    HomelessService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-us-west-2.amazonaws.com/devops-box-hacku/service.yaml
            Parameters:
                VPC: !GetAtt VPC.Outputs.VPC
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 2
                Listener: !GetAtt ALB.Outputs.Listener
                ConfigBucket: devops-box-hacku
                DeployTarget: integration
                ProjSettingsDir: homelessAPI
                Path: /homeless*

    EndPoints:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/services/endpoint-service/service.yaml
            Parameters:
                VPC: !GetAtt VPC.Outputs.VPC
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 2
                Listener: !GetAtt ALB.Outputs.Listener
                ALB: !GetAtt ALB.Outputs.LoadBalancerUrl
                Path: /

    # BastionHost:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/infrastructure/ec2-instance.yaml
    #         Parameters:
    #             EnvironmentName: !Ref AWS::StackName
    #             VPC: !GetAtt VPC.Outputs.VPC
    #             AvailabilityZone: us-west-2a
    #             SecurityGroupId: !GetAtt SecurityGroups.Outputs.BastionHostSecurityGroup
    #             ServerName: bastion
    #             AmiName: bastion
    #             KeyPairName: !Ref KeyPairName
    #             InstanceType: t2.nano
    #             Subnet: !GetAtt VPC.Outputs.PublicSubnet1

    # HomelessDB:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/infrastructure/ec2-instance.yaml
    #         Parameters:
    #             EnvironmentName: !Ref AWS::StackName
    #             VPC: !GetAtt VPC.Outputs.VPC
    #             AvailabilityZone: us-west-2a
    #             SecurityGroupId: !GetAtt SecurityGroups.Outputs.DBSecurityGroup
    #             ServerName: homeless
    #             AmiName: homeless
    #             KeyPairName: !Ref KeyPairName
    #             InstanceType: t2.nano
    #             Subnet: !GetAtt VPC.Outputs.PrivateSubnet1
    
Outputs:

    HomelessServiceUrl:
        Description: The URL endpoint for the homeless service
        Value: !Join [ "/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "homeless" ]]
