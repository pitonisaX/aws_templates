Description: >

    This template deploys a VPC, with a pair of public and private subnets spread
    across two Availabilty Zones. It deploys an Internet Gateway, with a default
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
    and default routes for them in the private subnets.

    It then deploys a highly available ECS cluster using an AutoScaling Group, with
    ECS hosts distributed across multiple Availability Zones.

    It then deploys a Highly available RDS Multi Availability Zone database services service using ()

    Finally, it deploys a pair of example ECS services from containers published in
    Amazon EC2 Container Registry (Amazon ECR).

    Based on AWSLabs ECS Reference Arhitecture
    https://github.com/awslabs/ecs-refarch-cloudformation

    Last Modified: 17th February 2017
    Author Dan Carr (ddcarr@gmail.com)

Resources:

    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/infrastructure/vpc.yaml
            Parameters:
                EnvironmentName:    !Ref AWS::StackName
                VpcCIDR:            10.180.0.0/16
                PublicSubnet1CIDR:  10.180.8.0/21
                PublicSubnet2CIDR:  10.180.16.0/21
                PrivateSubnet1CIDR: 10.180.24.0/21
                PrivateSubnet2CIDR: 10.180.32.0/21

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/infrastructure/security-groups.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/infrastructure/load-balancers.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

    ECS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/infrastructure/ecs-cluster.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                InstanceType: t2.micro
                ClusterSize: 2
                VPC: !GetAtt VPC.Outputs.VPC
                SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
                Subnets: !GetAtt VPC.Outputs.PrivateSubnets

    # HomelessRDS:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/infrastructure/rds.yaml
    #         Parameters:
    #             EnvironmentName: !Ref AWS::StackName
    #             VPC: !GetAtt VPC.Outputs.VPC
    #             Subnets: !GetAtt VPC.Outputs.PrivateSubnets
    #             TheDBIdentifier: 'foinkenstein'
    #             TheDBName: 'foinkme'
    #             TheDBUser: 'postgres'
    #             TheDBPassword: 'postgres'
    #             TheDBAllocatedStorage: '5'
    #             TheDBInstanceClass: 'db.t2.micro'
    #             IsMultiAZDatabase: 'false'

    # BudgetService:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/services/budget-service/service.yaml
    #         Parameters:
    #             VPC: !GetAtt VPC.Outputs.VPC
    #             Cluster: !GetAtt ECS.Outputs.Cluster
    #             DesiredCount: 2
    #             Listener: !GetAtt ALB.Outputs.Listener
    #             Path: /budget
    #

    # EmerresponeService:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/services/emerresponse-service/service.yaml
    #         Parameters:
    #             VPC: !GetAtt VPC.Outputs.VPC
    #             Cluster: !GetAtt ECS.Outputs.Cluster
    #             DesiredCount: 2
    #             Listener: !GetAtt ALB.Outputs.Listener
    #             Path: /emerresponse

    HomelessService:
        Type: AWS::CloudFormation::Stack
        Properties:
            #TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/services/homeless-service/service.yaml
            TemplateURL: https://s3-us-west-2.amazonaws.com/devops-box-hacku/service.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                Subnets: !GetAtt VPC.Outputs.PrivateSubnets
                TheDBIdentifier: 'pitondb8' # Your database Identifier
                TheDBName: 'alpha8' # Leave it blank for now
                TheDBUser: 'postgres' ## master admin user.  Will use <postgres>
                TheDBPassword: 'postgres'  ## <PASSWORD>
                TheDBAllocatedStorage: '5'
                TheDBInstanceClass: 'db.t2.micro'
                IsMultiAZDatabase: 'false' # Change this if you want a multi-az deploy

    ProductService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/services/product-service/service.yaml
            Parameters:
                VPC: !GetAtt VPC.Outputs.VPC
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 2
                Listener: !GetAtt ALB.Outputs.Listener
                Path: /products

    WebsiteService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/services/website-service/service.yaml
            Parameters:
                VPC: !GetAtt VPC.Outputs.VPC
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 2
                Listener: !GetAtt ALB.Outputs.Listener
                ConfigBucket: ASSIGN9-CONFIG
                DeployTarget: INTEGRATION
                Path: /homeless/*

    # HousingService:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/services/housing-service/service.yaml
    #         Parameters:
    #             VPC: !GetAtt VPC.Outputs.VPC
    #             Cluster: !GetAtt ECS.Outputs.Cluster
    #             DesiredCount: 2
    #             Listener: !GetAtt ALB.Outputs.Listener
    #             Path: /housing
    #
    # TransportationService:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/services/transportation-service/service.yaml
    #         Parameters:
    #             VPC: !GetAtt VPC.Outputs.VPC
    #             Cluster: !GetAtt ECS.Outputs.Cluster
    #             DesiredCount: 2
    #             Listener: !GetAtt ALB.Outputs.Listener
    #             Path: /transportation

    EndPoints:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-us-west-2.amazonaws.com/cfn-templates-hacko-infra/services/endpoint-service/service.yaml
            Parameters:
                VPC: !GetAtt VPC.Outputs.VPC
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 2
                Listener: !GetAtt ALB.Outputs.Listener
                ALB: !GetAtt ALB.Outputs.LoadBalancerUrl
                Path: /
Outputs:

    HomelessServiceUrl:
        Description: The URL endpoint for the product service
        Value: !Join [ "/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "homeless" ]]


    # ProductServiceUrl:
    #     Description: The URL endpoint for the product service
    #     Value: !Join [ "/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "products" ]]
    #
    # WebsiteServiceUrl:
    #     Description: The URL endpoint for the website service
    #     Value: !Join ["", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "/" ]]
